<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Icon_Play.Label" xml:space="preserve">
    <value>Играть</value>
    <comment>Title for a Play page</comment>
  </data>
  <data name="Icon_Results.Label" xml:space="preserve">
    <value>Результаты</value>
    <comment>Title for a Result page</comment>
  </data>
  <data name="Icon_Settings.Label" xml:space="preserve">
    <value>Настройки</value>
    <comment>Title for a Settings page</comment>
  </data>
  <data name="Icon_Training.Label" xml:space="preserve">
    <value>Учёба</value>
    <comment>Title for a Training page</comment>
  </data>
  <data name="Label_Back.Label" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="Modes_2_digit.Text" xml:space="preserve">
    <value>Двузначные числа</value>
  </data>
  <data name="Modes_3_digit.Text" xml:space="preserve">
    <value>Трёхзначные числа</value>
  </data>
  <data name="Results_Add_2.Text" xml:space="preserve">
    <value>Сложение двухзначные числа</value>
  </data>
  <data name="Results_Add_3.Text" xml:space="preserve">
    <value>Сложение трёхзначные числа</value>
  </data>
  <data name="Results_Div_2.Text" xml:space="preserve">
    <value>Деление двузначные числа</value>
  </data>
  <data name="Results_Div_3.Text" xml:space="preserve">
    <value>Деление трёхзначные числа</value>
  </data>
  <data name="Results_Mul_2.Text" xml:space="preserve">
    <value>Умножение двузначные числа</value>
  </data>
  <data name="Results_Mul_3.Text" xml:space="preserve">
    <value>Умножение трёхзначные числа</value>
  </data>
  <data name="Results_Sub_2.Text" xml:space="preserve">
    <value>Вычитание двузначные числа</value>
  </data>
  <data name="Results_Sub_3.Text" xml:space="preserve">
    <value>Вычитание трёхзначные числа</value>
  </data>
  <data name="Settings_ChangeLanguage.Content" xml:space="preserve">
    <value>Изменить язык</value>
  </data>
  <data name="Settings_Sound.Header" xml:space="preserve">
    <value>Звук</value>
  </data>
  <data name="Settings_Sound.OffContent" xml:space="preserve">
    <value>Выкл.</value>
  </data>
  <data name="Settings_Sound.OnContent" xml:space="preserve">
    <value>Вкл.</value>
  </data>
  <data name="Settings_Theme.Header" xml:space="preserve">
    <value>Выбор темы</value>
  </data>
  <data name="Settings_Theme.OffContent" xml:space="preserve">
    <value>Светлая</value>
  </data>
  <data name="Settings_Theme.OnContent" xml:space="preserve">
    <value>Тёмная</value>
  </data>
  <data name="Textblock_add_2.Text" xml:space="preserve">
    <value>Когда мы сладываем два двузначных числа, сначала добавляем десятичное значение C в CD к AB (AB+C0), затем складываем единичное значение D к AB+C0 </value>
  </data>
  <data name="Textblock_add_2.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_add_2.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_add_2_ex.Text" xml:space="preserve">
    <value>Чтобы сложить 64 и 32, сначала добавляем десятичное значение 3 в 32 к 64: 64 + 30 = 94</value>
  </data>
  <data name="Textblock_add_2_ex.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_add_2_ex.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_add_2_ex_2.Text" xml:space="preserve">
    <value>Затем добавляем единичное значение 2 в 32 к 94 чтобы получить значения 64 и 32: 94 + 2 = 96</value>
  </data>
  <data name="Textblock_add_2_ex_2.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_add_2_ex_2.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_sub_2.Text" xml:space="preserve">
    <value>Когда мы вычитаем  два двузначных числа, сначала вычитаем десятичное значение C в CD от AB (AB-C0), затем вычитание единичное значение D от AB-C0</value>
  </data>
  <data name="Textblock_sub_2.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_sub_2.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_sub_2_ex.Text" xml:space="preserve">
    <value>В 79 - 43, сначала вычитаем десятичное значение 4 в 43 от 79: 79 - 40 = 39</value>
  </data>
  <data name="Textblock_sub_2_ex.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_sub_2_ex.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_sub_2_ex_2.Text" xml:space="preserve">
    <value>Затем вычитаем еденичное значение 3 в 43 от 39: 39 - 3 = 36</value>
  </data>
  <data name="Textblock_sub_2_ex_2.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_sub_2_ex_2.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Title_Addition.Text" xml:space="preserve">
    <value>Сложение</value>
  </data>
  <data name="Title_Addition_modes.Text" xml:space="preserve">
    <value>Режимы сложение</value>
    <comment>Title for a Play page</comment>
  </data>
  <data name="Title_Add_section.Text" xml:space="preserve">
    <value>Секция сложения</value>
  </data>
  <data name="Title_Division.Text" xml:space="preserve">
    <value>Деление</value>
  </data>
  <data name="Title_Division_modes.Text" xml:space="preserve">
    <value>Режимы деления</value>
    <comment>Title for a Training page</comment>
  </data>
  <data name="Title_Div_section.Text" xml:space="preserve">
    <value>Секция деления</value>
  </data>
  <data name="Title_Multiplication.Text" xml:space="preserve">
    <value>Умножение</value>
  </data>
  <data name="Title_Multiplication_modes.Text" xml:space="preserve">
    <value>Режимы умножения</value>
    <comment>Title for a Settings page</comment>
  </data>
  <data name="Title_Mul_section.Text" xml:space="preserve">
    <value>Секция умножения</value>
  </data>
  <data name="Title_Play.Text" xml:space="preserve">
    <value>Играть</value>
    <comment>Title for a Play page</comment>
  </data>
  <data name="Title_Results.Text" xml:space="preserve">
    <value>Результаты</value>
    <comment>Title for a Result page</comment>
  </data>
  <data name="Title_Settings.Text" xml:space="preserve">
    <value>Настройки</value>
    <comment>Title for a Settings page</comment>
  </data>
  <data name="Title_Substraction.Text" xml:space="preserve">
    <value>Вычитания</value>
  </data>
  <data name="Title_Substraction_modes.Text" xml:space="preserve">
    <value>Режимы вычитания</value>
    <comment>Title for a Result page</comment>
  </data>
  <data name="Title_Sub_section.Text" xml:space="preserve">
    <value>Секция вычитания</value>
  </data>
  <data name="Title_Training.Text" xml:space="preserve">
    <value>Учёба</value>
    <comment>Title for a Training page</comment>
  </data>
  <data name="Textblock_mul_2.Text" xml:space="preserve">
    <value>Рассмотрим две техники множения: вертикально и крест на крест. Эти методики помогут нам в вычислении результата множения двухчисленных цифр.</value>
  </data>
  <data name="Textblock_mul_2.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_mul_2.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_mul_2_ex.Text" xml:space="preserve">
    <value>Чтобы получить результат множения двухчисленных цифр мы разделим наше вычисление на 3 части.</value>
  </data>
  <data name="Textblock_mul_2_ex.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_mul_2_ex.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_mul_2_ex_2.Text" xml:space="preserve">
    <value>Левую часть получаем результатом множения десятка чисел 21, тоесть 2, и 32, тоесть 3 2*3=6.</value>
  </data>
  <data name="Textblock_mul_2_ex_2.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_mul_2_ex_2.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_mul_2_ex_3.Text" xml:space="preserve">
    <value>Среднюю часть получаем результатом множения чисел 21 и 31 крест на крест, тоесть 2*2 и 3*1 а дальше складываем полученные результаты: 2*2 + 3*1 =7.</value>
  </data>
  <data name="Textblock_mul_2_ex_3.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_mul_2_ex_3.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="Textblock_mul_2_ex_4.Text" xml:space="preserve">
    <value>Правую часть получаем результатом множения второй части числа 21, тоесть 1 и 32, тоесть 2. Отсюда 21 * 32=672.</value>
  </data>
  <data name="Textblock_mul_2_ex_4.TextAlignment" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Textblock_mul_2_ex_4.TextWrapping" xml:space="preserve">
    <value>Wrap</value>
  </data>
</root>